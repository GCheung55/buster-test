#+SEQ_TODO: TODO INPR DONE

* TODO Macros
* DONE Only run tests where full name matches pattern (string/regexp) (Add module runner)
** buster.testFilter(context, filter)
** buster.moduleRunner(path)
* DONE "// should eventually"
** Runner should understand pending/deferred tests
** Reporter should display pending/deferred tests
* DONE Dot matrix reporter ala http://vowsjs.org/
* DONE Separate stats reporter into separate object
** Bind events in bindToRunner method
* DONE Flatten test contexts immediately
* DONE Allow node my-test.js to automatically run tests
* DONE Global should/before/after/describe functions?
** use export method on object exported from require("buster-xunit") and require("buster-bdd")
* DONE Catch unexpected exceptions (No, catch in runner setup)
* DONE "Disarm" promises after timeout
* DONE Sinon integration
* DONE buster.xUnitConsoleReporter.create({ color: true, bright: true }).listen(runner);
* TODO Run tests in parallel
* DONE Formatted logger
* DONE Catch run-away exceptions
* DONE Change this.log to buster.log
* DONE Test context data model should have deferred boolean, not support "//should"
* TODO Unsupported contexts in all reporters
* DONE Timeout in test and teardown causes double timeout
* TODO Async setup that never calls done -> times out, but still runs test and teardown
        setUp: function (done) {
            this.server = this.cli.createServer();
            this.server.listen(9999);
        },

        tearDown: function (done) {
            this.server.on("close", function () {
                buster.log("Hmm");
                done();
            });
            this.server.close();
        },

        "should process requests with buster server": function (done) {
            this.stub(buster.server, "respond");
            var server = this.cli.createServer();

            http.get({ host: "localhost", port: 9999 }, function () {
                buster.log(buster.server.respond.callCount);
                assert.calledOnce(buster.server.respond);
                done();
            });
        }
* DONE Async test + teardown = A marker is not removed
        setUp: function () {
            this.server = this.cli.createServer();
            this.server.listen(9999);
        },

        tearDown: function (done) {
            this.server.on("close", done);
            this.server.close();
        },

        "should process requests with buster server": function (done) {
* TODO Missing assertion count wiring -> NaN assertions
* TODO Possible to not get red report for 0 assertions
* TODO Flag duplicate test names
